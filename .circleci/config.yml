jobs:
  lint-app:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  builddocker:
    machine: true
    steps:
      - checkout
      - run:
          name: build docker
          command: |
            docker build --tag=capstone .
            docker image ls
            docker tag capstone 01123555566/capstone:latest
      - run:
          name: push docker
          command: |
            docker login -u 01123555566 -p ${DOCKER_PASS}
            docker push 01123555566/capstone:latest
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          name for kubernetes cluster.
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: false
          resource-file-path: deployment.yaml
          resource-name: deployment/bluedeployment
      - run:
          name: Showing the results of deployment
          command: |
            kubectl get svc
            kubectl get pods -o wide

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
version: 2.1
workflows:
  deployment:
    jobs:
      - create-small-cluster:
          cluster-name: prod-team-cluster
      - lint-app
      - builddocker:
          requires:
            - lint-app
      - create-deployment:
          cluster-name: prod-team-cluster
          requires:
            - create-small-cluster
